// Generated by view binder compiler. Do not edit!
package com.godspeed.propmart.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.godspeed.propmart.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPropertyPageBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView address;

  @NonNull
  public final TextView availablePlots;

  @NonNull
  public final ImageView backButton;

  @NonNull
  public final Button bid;

  @NonNull
  public final ImageView bookmarkpropertypage;

  @NonNull
  public final ImageView bookmarksaved;

  @NonNull
  public final RecyclerView documentRv;

  @NonNull
  public final ImageView layoutMap;

  @NonNull
  public final AutoCompleteTextView plotDropdown;

  @NonNull
  public final CardView plotSelection;

  @NonNull
  public final TextView sellerName;

  @NonNull
  public final TextView soldPlots;

  @NonNull
  public final TextView title;

  @NonNull
  public final LinearLayout toolbar;

  @NonNull
  public final TextView toolbarTitle;

  @NonNull
  public final TextView totalPlots;

  private ActivityPropertyPageBinding(@NonNull RelativeLayout rootView, @NonNull TextView address,
      @NonNull TextView availablePlots, @NonNull ImageView backButton, @NonNull Button bid,
      @NonNull ImageView bookmarkpropertypage, @NonNull ImageView bookmarksaved,
      @NonNull RecyclerView documentRv, @NonNull ImageView layoutMap,
      @NonNull AutoCompleteTextView plotDropdown, @NonNull CardView plotSelection,
      @NonNull TextView sellerName, @NonNull TextView soldPlots, @NonNull TextView title,
      @NonNull LinearLayout toolbar, @NonNull TextView toolbarTitle, @NonNull TextView totalPlots) {
    this.rootView = rootView;
    this.address = address;
    this.availablePlots = availablePlots;
    this.backButton = backButton;
    this.bid = bid;
    this.bookmarkpropertypage = bookmarkpropertypage;
    this.bookmarksaved = bookmarksaved;
    this.documentRv = documentRv;
    this.layoutMap = layoutMap;
    this.plotDropdown = plotDropdown;
    this.plotSelection = plotSelection;
    this.sellerName = sellerName;
    this.soldPlots = soldPlots;
    this.title = title;
    this.toolbar = toolbar;
    this.toolbarTitle = toolbarTitle;
    this.totalPlots = totalPlots;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPropertyPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPropertyPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_property_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPropertyPageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.address;
      TextView address = ViewBindings.findChildViewById(rootView, id);
      if (address == null) {
        break missingId;
      }

      id = R.id.availablePlots;
      TextView availablePlots = ViewBindings.findChildViewById(rootView, id);
      if (availablePlots == null) {
        break missingId;
      }

      id = R.id.back_button;
      ImageView backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.bid;
      Button bid = ViewBindings.findChildViewById(rootView, id);
      if (bid == null) {
        break missingId;
      }

      id = R.id.bookmarkpropertypage;
      ImageView bookmarkpropertypage = ViewBindings.findChildViewById(rootView, id);
      if (bookmarkpropertypage == null) {
        break missingId;
      }

      id = R.id.bookmarksaved;
      ImageView bookmarksaved = ViewBindings.findChildViewById(rootView, id);
      if (bookmarksaved == null) {
        break missingId;
      }

      id = R.id.document_rv;
      RecyclerView documentRv = ViewBindings.findChildViewById(rootView, id);
      if (documentRv == null) {
        break missingId;
      }

      id = R.id.layout_map;
      ImageView layoutMap = ViewBindings.findChildViewById(rootView, id);
      if (layoutMap == null) {
        break missingId;
      }

      id = R.id.plot_dropdown;
      AutoCompleteTextView plotDropdown = ViewBindings.findChildViewById(rootView, id);
      if (plotDropdown == null) {
        break missingId;
      }

      id = R.id.plot_selection;
      CardView plotSelection = ViewBindings.findChildViewById(rootView, id);
      if (plotSelection == null) {
        break missingId;
      }

      id = R.id.seller_name;
      TextView sellerName = ViewBindings.findChildViewById(rootView, id);
      if (sellerName == null) {
        break missingId;
      }

      id = R.id.sold_plots;
      TextView soldPlots = ViewBindings.findChildViewById(rootView, id);
      if (soldPlots == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.toolbar;
      LinearLayout toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.toolbar_title;
      TextView toolbarTitle = ViewBindings.findChildViewById(rootView, id);
      if (toolbarTitle == null) {
        break missingId;
      }

      id = R.id.totalPlots;
      TextView totalPlots = ViewBindings.findChildViewById(rootView, id);
      if (totalPlots == null) {
        break missingId;
      }

      return new ActivityPropertyPageBinding((RelativeLayout) rootView, address, availablePlots,
          backButton, bid, bookmarkpropertypage, bookmarksaved, documentRv, layoutMap, plotDropdown,
          plotSelection, sellerName, soldPlots, title, toolbar, toolbarTitle, totalPlots);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
