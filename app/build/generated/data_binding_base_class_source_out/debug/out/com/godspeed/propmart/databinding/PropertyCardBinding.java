// Generated by view binder compiler. Do not edit!
package com.godspeed.propmart.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.godspeed.propmart.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PropertyCardBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView address;

  @NonNull
  public final LinearLayout buttonGroup;

  @NonNull
  public final ImageView map;

  @NonNull
  public final TextView plotCount;

  @NonNull
  public final ImageView plotImage;

  @NonNull
  public final ImageView save;

  @NonNull
  public final ImageView saved;

  @NonNull
  public final TextView seller;

  @NonNull
  public final View seperator;

  @NonNull
  public final ImageView share;

  @NonNull
  public final TextView title;

  private PropertyCardBinding(@NonNull RelativeLayout rootView, @NonNull TextView address,
      @NonNull LinearLayout buttonGroup, @NonNull ImageView map, @NonNull TextView plotCount,
      @NonNull ImageView plotImage, @NonNull ImageView save, @NonNull ImageView saved,
      @NonNull TextView seller, @NonNull View seperator, @NonNull ImageView share,
      @NonNull TextView title) {
    this.rootView = rootView;
    this.address = address;
    this.buttonGroup = buttonGroup;
    this.map = map;
    this.plotCount = plotCount;
    this.plotImage = plotImage;
    this.save = save;
    this.saved = saved;
    this.seller = seller;
    this.seperator = seperator;
    this.share = share;
    this.title = title;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PropertyCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PropertyCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.property_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PropertyCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.address;
      TextView address = ViewBindings.findChildViewById(rootView, id);
      if (address == null) {
        break missingId;
      }

      id = R.id.button_group;
      LinearLayout buttonGroup = ViewBindings.findChildViewById(rootView, id);
      if (buttonGroup == null) {
        break missingId;
      }

      id = R.id.map;
      ImageView map = ViewBindings.findChildViewById(rootView, id);
      if (map == null) {
        break missingId;
      }

      id = R.id.plot_count;
      TextView plotCount = ViewBindings.findChildViewById(rootView, id);
      if (plotCount == null) {
        break missingId;
      }

      id = R.id.plot_image;
      ImageView plotImage = ViewBindings.findChildViewById(rootView, id);
      if (plotImage == null) {
        break missingId;
      }

      id = R.id.save;
      ImageView save = ViewBindings.findChildViewById(rootView, id);
      if (save == null) {
        break missingId;
      }

      id = R.id.saved;
      ImageView saved = ViewBindings.findChildViewById(rootView, id);
      if (saved == null) {
        break missingId;
      }

      id = R.id.seller;
      TextView seller = ViewBindings.findChildViewById(rootView, id);
      if (seller == null) {
        break missingId;
      }

      id = R.id.seperator;
      View seperator = ViewBindings.findChildViewById(rootView, id);
      if (seperator == null) {
        break missingId;
      }

      id = R.id.share;
      ImageView share = ViewBindings.findChildViewById(rootView, id);
      if (share == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new PropertyCardBinding((RelativeLayout) rootView, address, buttonGroup, map,
          plotCount, plotImage, save, saved, seller, seperator, share, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
